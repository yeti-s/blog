{"version":3,"file":"component---src-pages-index-tsx-36092dd740df4c507dbe.js","mappings":"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","sources":["webpack://blog/./src/sidebar/SidebarContainer.tsx","webpack://blog/./src/sidebar/SidebarItemContainer.tsx","webpack://blog/./src/sidebar/SidebarItemMenu.tsx","webpack://blog/./src/sidebar/SidebarItem.tsx","webpack://blog/./src/sidebar/ContemtView.tsx","webpack://blog/./src/pages/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\ntype Props = {\r\n    children:JSX.Element\r\n}\r\n\r\nexport default function SidebarContainer({children}:Props):React.ReactElement{\r\n\r\n    const [collapsed, setCollapsed] = useState(true)\r\n\r\n    const collapse = () => {\r\n        console.log(\"1123\")\r\n        setCollapsed(!collapsed)\r\n    }\r\n\r\n    return (\r\n        <nav id=\"sidebar\" className={collapsed ? '':'active'}>\r\n            <div className=\"custom-menu\">\r\n                <button type=\"button\" id=\"sidebarCollapse\" className=\"btn btn-primary\" onClick={collapse}>\r\n                    <i className=\"fa fa-bars\"></i>\r\n                    <span className=\"sr-only\">Toggle Menu</span>\r\n                </button>\r\n            </div>\r\n            {children}\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\ntype Props = {\r\n    name:string\r\n    children: Array<JSX.Element>\r\n}\r\n\r\nexport default function SidebarItemContainer({ name, children }: Props): React.ReactElement {\r\n    return (\r\n        <div className=\"p-4 pt-5\">\r\n            <h1><a href=\"/\" className=\"logo\">{name}</a></h1>\r\n            <ul className=\"list-unstyled components mb-5\">\r\n                {children}\r\n            </ul>\r\n\r\n            {/* <div className=\"mb-5\">\r\n                <h3 className=\"h6\">Subscribe for newsletter</h3>\r\n                <form action=\"#\" className=\"colorlib-subscribe-form\">\r\n                    <div className=\"form-group d-flex\">\r\n                        <div className=\"icon\"><span className=\"icon-paper-plane\"></span></div>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Email Address\" />\r\n                    </div>\r\n                </form>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\ntype Props = {\r\n    id: string,\r\n    name: string,\r\n    children: Array<JSX.Element>\r\n}\r\n\r\nexport default function SidebarItemMenu({ id, name, children }: Props): React.ReactElement {\r\n    const [collapsed, setCollapsed] = useState(true)\r\n\r\n    const collapse = () => {\r\n        setCollapsed(!collapsed)\r\n    }\r\n\r\n    return (\r\n        <li className=\"active\">\r\n            <a data-toggle=\"collapse\" aria-expanded={!collapsed} onClick={collapse}\r\n                className={collapsed ? \"dropdown-toggle\" : \"dropdown-toggle collapsed\"}>{name}</a>\r\n            <ul className={collapsed ? \"collapse list-unstyled\" : \"collapse list-unstyled show\"} id={id}>\r\n                {children}\r\n            </ul>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\ntype Props = {\r\n    name: string\r\n    href: string\r\n}\r\n\r\nexport default function SidebarItem({name, href}: Props): React.ReactElement {\r\n\r\n\r\n    return (\r\n        <li>\r\n            <a href={href}>{name}</a>\r\n        </li>\r\n    )\r\n}\r\n","import React, { ReactElement } from \"react\";\r\n\r\ntype Props = {\r\n    contents: string\r\n}\r\n\r\nexport default function ContentsView({ contents }: Props): ReactElement {\r\n    return (\r\n        <div id=\"content\" className=\"p-4 p-md-5 pt-5\">\r\n\r\n            <h2 className=\"mb-4\">Sidebar #02</h2>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et\r\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\r\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\r\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\r\n                deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et\r\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\r\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\r\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\r\n                deserunt mollit anim id est laborum.</p>\r\n        </div>\r\n    )\r\n}","import * as React from \"react\"\r\nimport type { HeadFC, PageProps } from \"gatsby\"\r\nimport { graphql } from 'gatsby'\r\n\r\nimport '../styles.css';\r\n\r\nimport SidebarContainer from \"../sidebar/SidebarContainer\";\r\nimport SidebarItemContainer from \"../sidebar/SidebarItemContainer\";\r\nimport SidebarItemMenu from \"../sidebar/SidebarItemMenu\";\r\nimport SidebarItem from \"../sidebar/SidebarItem\";\r\nimport ContentsView from \"../sidebar/ContemtView\";\r\n\r\ntype AllFiles = {\r\n    allFile: {\r\n        nodes: {\r\n            id: string,\r\n            name: string,\r\n            changeTime: string,\r\n            relativeDirectory: string\r\n        }[]\r\n    }\r\n};\r\n\r\nconst IndexPage = ({ data }: PageProps<AllFiles>) => {\r\n    React.useState(() => {\r\n        console.log(data.allFile.nodes)\r\n    })\r\n\r\n    const createSidebarItems = ():Array<React.ReactElement> => {\r\n        let components = Array<React.ReactElement>();\r\n        let dirs = new Map<string, any[]>();\r\n        // create map\r\n        data.allFile.nodes.map(node => {\r\n            let file = {\r\n                name: node.name,\r\n                changeTime: node.changeTime,\r\n                dir: node.relativeDirectory,\r\n                id: node.id\r\n            }\r\n            if (!dirs.hasOwnProperty(file.dir))\r\n                dirs.set(file.dir, [])\r\n            dirs.get(file.dir)?.push(file);\r\n        })\r\n        // create components\r\n        dirs.forEach((files, key, obj) => {\r\n            let children = Array<React.ReactElement>();\r\n            files.forEach((file, index, arr) => {\r\n                children.push(<SidebarItem name={file.name} href={`${file.id}`} key={file.id}/>)\r\n            })\r\n            if (key === '') components = components.concat(children)\r\n            else components.push(<SidebarItemMenu id={key} name={key} children={children} key={key}/>)\r\n        })\r\n        return components;\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"wrapper d-flex align-items-stretch\">\r\n                <SidebarContainer>\r\n                    <SidebarItemContainer name=\"yeti's blog\">\r\n                        {createSidebarItems()}\r\n                    </SidebarItemContainer>\r\n                </SidebarContainer>\r\n                <ContentsView contents=\"1\" />\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport const Head: HeadFC = () => <title>Home Page</title>\r\n\r\nexport default IndexPage\r\n\r\n\r\nexport const query = graphql`\r\n{\r\n  allFile {\r\n    nodes {\r\n      id\r\n      name\r\n      changeTime\r\n      relativeDirectory\r\n    }\r\n  }\r\n}\r\n`;"],"names":["SidebarContainer","children","collapsed","setCollapsed","useState","React","id","className","type","onClick","console","log","SidebarItemContainer","name","href","SidebarItemMenu","SidebarItem","ContentsView","contents","Head","_ref","data","allFile","nodes","components","Array","dirs","Map","map","node","file","changeTime","dir","relativeDirectory","hasOwnProperty","set","get","_dirs$get","push","forEach","files","key","obj","index","arr","concat","createSidebarItems"],"sourceRoot":""}